# Taken from https://github.com/pybind/scikit_build_example/blob/master/.github/workflows/wheels.yml

name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - main
    paths:
      - '.github/workflows/wheels.yml'
  release:
    types:
  #    - created
      - published

env:
  FORCE_COLOR: 3

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: '0.5.5'
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Build SDist
      run: uv build --sdist

    - name: Check metadata
      run: uv tool run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          #TODO
          #- windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - uses: astral-sh/setup-uv@v4
      with:
        version: '0.5.5'

    - uses: pypa/cibuildwheel@v2.22
      env:
        CIBW_ARCHS_MACOS: x86_64 arm64
        CIBW_ARCHS_LINUX: x86_64 # aarch64
        # Force GLIBC 2.28 for C++ 20
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
        CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
        CIBW_MANYLINUX_PYPY_X86_64_IMAGE: manylinux_2_28
        CIBW_MANYLINUX_PYPY_AARCH64_IMAGE: manylinux_2_28

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment: pypi
    permissions:
      id-token: write
      attestations: write

    steps:
    - uses: actions/setup-python@v5
      with:
        python-version-file: 'pyproject.toml'

    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        merge-multiple: true
        path: dist

    - name: Generate artifact attestation for sdist and wheels
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: "dist/*"

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        attestations: true
