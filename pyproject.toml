[build-system]
requires = [
    "hatchling",
    "scikit-build-core==0.9.2",
    "nanobind>=2.2,<3.0",
    "hatch-vcs",
]
build-backend = "hatchling.build"

[project]
name = "atopile"
description = "A toolchain bringing the best of software development to the real-world!"
readme = "README.md"
requires-python = ">=3.13,<3.14"
dynamic = ["version"]
license = { file = "LICENSE" }
authors = [
    { name = "Matthew Wildoer", email = "matt@atopile.io" },
    { name = "Ioannis Papamanoglou", email = "ioannis@atopile.io" },
    { name = "Narayan Powderly", email = "narayan@atopile.io" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy>=2.2.0,<3.0.0",
    "matplotlib>=3.7.1,<4.0.0",
    "sexpdata>=1.0.2,<2.0.0",
    "black>=24.4.2,<24.11.0",
    "typing-extensions>=4.6.3,<5.0.0",
    "atopile-easyeda2kicad>=0.9.0",
    "shapely>=2.0.1,<3.0.0",
    "freetype-py>=2.4,<2.6",
    "kicadcliwrapper>=1.0.0,<2.0.0",
    "dataclasses-json>=0.6.7,<0.7.0",
    "patool>=2.3.0,<2.4.0",
    "requests>=2.32.3,<3.0.0",
    "rich>=13.7.1,<14.0.0",
    "isort>=5.6.4,<5.14.0",
    "typer>=0.12,<0.16",
    "ruff>=0.8.2,<0.9.0",
    "pint>=0.24.4,<1.0.0",
    "deprecated~=1.2.14",
    "more-itertools>=10.4,<10.7",
    "psutil>=6.0.0,<7.0.0",
    "antlr4-python3-runtime==4.13.2", # Strict version because the generated (but versioned) files must match
    "attrs>=23.2.0",
    "case-converter>=1.1.0",
    "cattrs>=23.2.3",
    "DeepDiff>=6.7.1",
    "fake-useragent>=1.4.0",
    "fastapi>=0.109.0",
    "gitpython>=3.1.41",
    "jinja2>=3.1.3",
    "natsort>=8.4.0",
    "packaging>=23.2",
    "pandas>=2.1.4",
    "pygls>=1.3.0",
    "quart-cors>=0.7.0",
    "quart-schema[pydantic]>=0.20.0",
    "quart>=0.19.9",
    "ruamel.yaml>=0.18.5",
    "schema>=0.7.5",
    "scipy>=1.12.0",
    "semver>=3.0.2",
    "toolz>=0.12.0",
    "urllib3>=2.2.1",
    "uvicorn[standard]>=0.25.0",
    "watchfiles>=0.21.0",
    "questionary>=2.0.1",
    "pydantic-settings>=2.7.1",
]

[project.urls]
Homepage = "https://github.com/atopile/atopile"
"Bug Tracker" = "https://github.com/atopile/atopile/issues"


[dependency-groups]
dev = [
    "antlr4-tools",
    "coverage>=7.6.8",
    "dash_cytoscape~=1.0.2",
    "dash~=2.18.1",
    "debugpy",
    "gprof2dot~=2024.6.6",
    "mkdocs-material",
    "mkdocs",
    "nanobind>=2.2,<3.0",
    "pre-commit>=2.20,<4.0",
    "pyinstrument~=4.7.1",
    "pytest-datafiles",
    "pytest-html",
    "pytest-xdist~=3.6.1",
    "pytest>=7.1.3,<9.0.0",
    "viztracer>=1.0.0,<2.0.0",
    "pytest-benchmark>=5.1.0,<6.0.0",
    "pytest-timeout>=2.3.1",
    "pytest-history @ git+https://github.com/atopile/pytest-history.git",
    "mkdocstrings[python]>=0.27.0",
    "griffe-typingdoc>=0.2.7",
    "pathvalidate>=3.2.1",
    "mike>=2.1.3",
    "hatch>=1.14.0",
    "atopile-mkdocs-plugin",
]


[project.scripts]
ato = "atopile.cli.cli:main"
faebryk = "faebryk.tools.main:__main__"

[tool.hatch]

[tool.hatch.metadata]
allow-direct-references = true

# Add the built viewer to the python package
[tool.hatch.build.targets.wheel]
artifacts = ["**/viewer/dist"]
packages = ["src/faebryk", "src/atopile"]

[tool.hatch.build.targets.wheel.hooks.scikit-build]
experimental = true
cmake.source-dir = "src/faebryk/core/cpp"

[tool.hatch.build.targets.sdist]
artifacts = ["**/viewer/dist"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
# Passed through to setuptools-scm
# See: https://setuptools-scm.readthedocs.io/en/latest/config/
# https://setuptools-scm.readthedocs.io/en/latest/extending/
version_scheme = "only-version"
local_scheme = "no-local-version"

[tool.isort]
profile = "black"
known_third_party = []


[tool.pytest]
[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--html=artifacts/test-report.html",
    "--self-contained-html",
    "--numprocesses=auto",
]
filterwarnings = ["ignore:.*:DeprecationWarning"]
testpaths = ["test"]
log_file_format = "%(asctime)s %(levelname)s %(name)s %(message)s"
# log_file_level = "DEBUG"  # <-- you can set this in a PR if you want to debug tests in CI
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "not_in_ci: marks tests that should not be run in CI",
    "regression: marks tests that are used for deeper regression testing. May be slow and flaky.",
]
history-url = "https://ynesgbuoxmszjrkzazxz.supabase.co"
# anon key, so safe for public repo
history-key = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InluZXNnYnVveG1zempya3phenh6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzQzNzg5NDYsImV4cCI6MjA0OTk1NDk0Nn0.6KxEoSHTgyV4jKnnLAG5-Y9tWfHOzpl0qnA_NPzGUBo"


[tool.ruff]
line-length = 88         # Same as Black.
target-version = "py313"

exclude = [
    "src/atopile/parser/AtoLexer.py",
    "src/atopile/parser/AtoLexerBase.py",
    "src/atopile/parser/AtoParser.py",
    "src/atopile/parser/AtoParserBase.py",
    "src/atopile/parser/AtoParserListener.py",
    "src/atopile/parser/AtoParserVisitor.py",
    "src/atopile/kicad_plugin",
    "docs/",
    "sandbox/",
]

[tool.ruff.format]
exclude = ["_F.py"]

[tool.ruff.lint]
# Enable recommended set of rules
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "I001", # isort
    #"B",    # flake8-bugbear
    #"C4",   # flake8-comprehensions
    #"PL",   # Pylint
    #"RUF",  # Ruff-specific rules
    #"UP",   # pyupgrade
    #"N",    # pep8-naming
    #"SIM",  # flake8-simplify
    #"TCH",  # flake8-type-checking
    #"ARG",  # flake8-unused-arguments
    #"PTH",  # flake8-use-pathlib
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A",   # flake8-builtins
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "D",   # pydocstyle
    "E",   # pycodestyle errors
    "F",   # Pyflakes
    "G",   # flake8-logging-format
    "I",   # isort
    "N",   # pep8-naming
    "Q",   # flake8-quotes
    "S",   # flake8-bandit
    "T",   # flake8-print
    "W",   # pycodestyle warnings
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "BLE", # flake8-blind-except
    "COM", # flake8-commas
    "DJ",  # flake8-django
    "DTZ", # flake8-datetimez
    "EM",  # flake8-errmsg
    "ERA", # eradicate
    "EXE", # flake8-executable
    "FBT", # flake8-boolean-trap
    "ICN", # flake8-import-conventions
    "INP", # flake8-no-pep420
    "ISC", # flake8-implicit-str-concat
    "NPY", # NumPy-specific rules
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # Pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "PYI", # flake8-pyi
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "SLF", # flake8-self
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "TRY", # tryceratops
    "UP",  # pyupgrade
    "YTT", # flake8-2020
]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.black]
line-length = 88
target-version = ['py313']
extend-exclude = "atopile/parser/"

[tool.uv.sources]
atopile-mkdocs-plugin = { path = "tools/atopile_mkdocs_plugin", editable = true }
